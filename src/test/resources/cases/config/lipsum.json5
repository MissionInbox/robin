{
  $schema: "/schema/case.schema.json",

  // How many times to try and establish a connection to remote server. First counts.
  retry: 2,

  // Delay between tries.
  delay: 5,

  // Enable TLS.
  tls: true,

  // Email envelopes.
  envelopes: [
    // Envelope one.
    {
      // Magic headers.
      headers: {
        "X-Prepended-One": "There can be only one!",
        "X-Prepended-Two": "There's no second place :("
      },
      // Auto prepend them to the email.
      prependHeaders: true,

      // Email eml file to transmit.
      file: "src/test/resources/cases/sources/lipsum.eml",

      // Assertions to run against the envelope.
      assertions: {

        // Protocol assertions.
        // Check SMTP responses match regular expressions.
        protocol: [
          ["MAIL", "250 Sender OK"],
          ["RCPT", "250 Recipient OK"],
          ["DATA", "^250"],
          ["DATA", "Received OK"]
        ],

        // External assertions.
        external: [
          {
            // Assertion type logs for pulling logs from FFS.
            type: "logs",

            // How long to wait before asserting.
            wait: 5,

            // Delay between log pulling attempts.
            delay: 5,

            // How many times to retry should no logs be found or valid.
            retry: 3,

            // Grep command to use to fetch logs.
            grep: [
              {
                // Lines containing GUID used by magic variable.
                parameter: "-E",
                pattern: "{$uid}"
              },
              {
                // Exclude DEBUG and TRACE log lines matched.
                parameter: "-vE",
                pattern: "DEBUG|TRACE"
              }
            ],

            // Verify regular expressions that would confirm logs fetched are complete.
            verify: ["QUIT"],

            // Match regular expressions to run agaisnt logs to pass the test.
            match: [
              ["250 2.0.0", "Received email OKAY"]
            ],

            // Refuse regular expressions that would fail the tests if matched.
            refuse: [
              ["java.lang.NullPointerException"]
            ]
          }
        ]
      }
    }
  ],

  // Assertions to run against the connection.
  assertions: {
    // Disable pre assertion checks from failing the test, exit gracefully.
    protocolFails: false, // If SMTP asertion fails skip.
    verifyFails: false,

    // Protocol assertions.
    // Check SMTP responses match regular expressions.
    protocol: [
      [ "SMTP", "^220" ],
      [ "EHLO", "STARTTLS" ],
      [ "SHLO", "250 HELP" ],
      [ "QUIT" ]
    ]
  }
}